# Generated by Django 3.2.20 on 2024-05-08 12:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('db', '0077_auto_20240508_1152'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('created_by_ip', models.CharField(max_length=20, null=True)),
                ('updated_by_ip', models.CharField(max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(max_length=50, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('zoom_link', models.TextField(null=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('start_at', models.DateTimeField(blank=True, null=True)),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.CharField(max_length=50, null=True)),
                ('timezone', models.CharField(max_length=50, null=True)),
                ('booking', models.CharField(max_length=100, null=True)),
                ('invitee_email', models.CharField(default=None, max_length=255, null=True)),
                ('resource_id', models.CharField(max_length=100, null=True)),
                ('invitee_id', models.IntegerField(default=0)),
                ('invitee_name', models.CharField(max_length=255, null=True)),
                ('ds_host_id', models.CharField(max_length=255, null=True)),
                ('host_name', models.CharField(max_length=255, null=True)),
                ('mega_domain', models.CharField(max_length=255, null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_subject', to='db.subject')),
            ],
            options={
                'db_table': 'appointment',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('invitee_name', models.CharField(max_length=255)),
                ('invitee_email', models.EmailField(max_length=100)),
                ('start_at', models.CharField(max_length=100, null=True)),
                ('resource_id', models.CharField(max_length=100, null=True)),
                ('invitee_id', models.IntegerField(default=0)),
                ('booking', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'bookings',
            },
        ),
        migrations.CreateModel(
            name='ClassClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'class_classification',
            },
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('comment', models.CharField(max_length=500)),
                ('commenter', models.CharField(max_length=255)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments_feedback', to='db.appointments')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stundet_comment', to=settings.AUTH_USER_MODEL)),
                ('tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tutor_comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'feedbacks',
            },
        ),
        migrations.CreateModel(
            name='FeedbackQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('question', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('student', 'Student'), ('tutor', 'Tutor')], default='student', max_length=64)),
            ],
            options={
                'db_table': 'feedback_questions',
            },
        ),
        migrations.CreateModel(
            name='StudentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('marks', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('HOME', 'HOME'), ('CLASS', 'CLASS')], default='CLASS', max_length=255)),
                ('is_visible', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.assignment')),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.domain')),
                ('megadomain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.megadomain')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.module')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.subject')),
                ('subtopic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.subtopic')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='db.topic')),
            ],
            options={
                'verbose_name': 'StudentAssignment',
                'verbose_name_plural': 'StudentAssignments',
                'db_table': 'student_assignment',
            },
        ),
        migrations.CreateModel(
            name='StudentAssignmentQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.TextField(blank=True)),
                ('passage', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('marks', models.IntegerField(default=0)),
                ('sequence', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('MCQ', 'MCQ'), ('FIB', 'FIB'), ('TF', 'TF'), ('SPR', 'SPR')], default='MCQ', max_length=255)),
                ('assignment_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignment_questions', to='db.assignmentquestion')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignment_questions', to=settings.AUTH_USER_MODEL)),
                ('student_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_assignment_questions', to='db.studentassignment')),
            ],
            options={
                'verbose_name': 'StudentAssignmentQuestion',
                'verbose_name_plural': 'StudentAssignmentQuestions',
                'db_table': 'student_assignment_question',
            },
        ),
        migrations.CreateModel(
            name='StudentDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sequence', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_domain', to='db.domain')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_domain', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'StudentDomain',
                'verbose_name_plural': 'StudentDomains',
                'db_table': 'student_domain',
            },
        ),
        migrations.CreateModel(
            name='StudentQuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('sequence', models.IntegerField(default=0)),
                ('question_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_question_options', to='db.questionoption')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_question_options', to=settings.AUTH_USER_MODEL)),
                ('student_assignment_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_question_options', to='db.studentassignmentquestion')),
            ],
            options={
                'verbose_name': 'StudentQuestionOption',
                'verbose_name_plural': 'StudentQuestionOptions',
                'db_table': 'student_question_option',
            },
        ),
        migrations.CreateModel(
            name='TimeAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('time_taken', models.JSONField(default=dict)),
                ('data', models.JSONField(default=dict)),
                ('type', models.CharField(choices=[('QUESTION', 'Question'), ('PRACTICE_SHEET', 'Practice_Sheet'), ('CPEA_SHEET', 'Cpea_Sheet')], max_length=20)),
                ('is_visited', models.BooleanField(default=False)),
                ('is_answered', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_analytics_assignment', to='db.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_analytics_user', to=settings.AUTH_USER_MODEL)),
                ('student_assignment_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_analytics_assignment_question', to='db.studentassignmentquestion')),
                ('student_question_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_analytics_question_option', to='db.studentquestionoption')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sequence', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_topic', to=settings.AUTH_USER_MODEL)),
                ('student_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_topic', to='db.studentdomain')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_topic', to='db.topic')),
            ],
            options={
                'verbose_name': 'StudentTopic',
                'verbose_name_plural': 'StudentTopics',
                'db_table': 'student_topic',
            },
        ),
        migrations.CreateModel(
            name='StudentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('type', models.CharField(choices=[('PRIMARY', 'Primary'), ('SECONDARY', 'Secondary')], max_length=20)),
                ('is_active_tutor', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to=settings.AUTH_USER_MODEL)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_teams',
            },
        ),
        migrations.CreateModel(
            name='StudentSubTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('sequence', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_extra', models.BooleanField(default=False)),
                ('time', models.CharField(default='15', max_length=20)),
                ('practice_sheet', models.URLField(blank=True, null=True)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_subtopic', to=settings.AUTH_USER_MODEL)),
                ('student_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_subtopic', to='db.studenttopic')),
                ('sub_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_subtopic', to='db.subtopic')),
            ],
            options={
                'verbose_name': 'StudentSubTopic',
                'verbose_name_plural': 'StudentSubTopics',
                'db_table': 'student_subtopic',
            },
        ),
        migrations.CreateModel(
            name='StudentSessionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.CharField(choices=[('r', 'R'), ('s', 'S'), ('t', 'T')], default='r', max_length=20)),
                ('corePrep', models.DateField(null=True)),
                ('targetTest', models.DateField(null=True)),
                ('mega_domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_session_plan', to='db.megadomain')),
                ('session_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_session_plan', to='db.sessionplan')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_session_plan', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_session_plan', to='db.subject')),
            ],
            options={
                'verbose_name': 'StudentSession',
                'verbose_name_plural': 'StudentSessions',
                'db_table': 'student_session',
            },
        ),
        migrations.CreateModel(
            name='StudentModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sequence', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_module', to='db.module')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_module', to=settings.AUTH_USER_MODEL)),
                ('student_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_module', to='db.studentsessionplan')),
            ],
            options={
                'verbose_name': 'StudentModule',
                'verbose_name_plural': 'StudentModules',
                'db_table': 'student_module',
            },
        ),
        migrations.CreateModel(
            name='StudentJourney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('completion_date', models.DateTimeField(null=True)),
                ('class_type', models.CharField(choices=[('Core_prep', 'Core Prep'), ('CPEA', 'CPEA'), ('Group_class', 'Group Class')], max_length=500)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_student_journey', to='db.appointments')),
            ],
            options={
                'db_table': 'student_journey',
            },
        ),
        migrations.CreateModel(
            name='StudentGroupEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('event_id', models.CharField(max_length=100)),
                ('class_name', models.CharField(default=None, max_length=500, null=True)),
                ('tutor_name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('is_taken', models.BooleanField(default=False, null=True)),
                ('is_sso_verified', models.BooleanField(default=False, null=True)),
                ('target_test_date', models.DateField(null=True)),
                ('group_id', models.CharField(default=None, max_length=200, null=True)),
                ('deptHead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deptHead', to=settings.AUTH_USER_MODEL)),
                ('sso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sso', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StudentGroupEvents', to=settings.AUTH_USER_MODEL)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StudentGroupEventTutor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_group_events',
            },
        ),
        migrations.AddField(
            model_name='studentdomain',
            name='student_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_session', to='db.studentsessionplan'),
        ),
        migrations.CreateModel(
            name='StudentCpeaReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('status', models.CharField(choices=[('Pass', 'Pass'), ('Fail', 'Fail'), ('Result_Awaited', 'Result_Awaited')], default='Result_Awaited', max_length=20)),
                ('answers', models.JSONField(default=dict)),
                ('overall_feedback', models.CharField(default=None, max_length=500, null=True)),
                ('is_student_view', models.BooleanField(default=False)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.appointments')),
                ('assignment', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpea_reports', to=settings.AUTH_USER_MODEL)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpea_tutor_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_cpea_reports',
            },
        ),
        migrations.CreateModel(
            name='StudentClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('is_cpea_enabled', models.BooleanField(default=False)),
                ('is_core_prep_enabled', models.BooleanField(default=False)),
                ('is_group_class_enabled', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_class', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_classes',
            },
        ),
        migrations.CreateModel(
            name='StudentAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('type', models.CharField(max_length=100, null=True)),
                ('target_test_date_1', models.DateField(null=True)),
                ('target_test_date_2', models.DateField(null=True)),
                ('target_test_date_3', models.DateField(null=True)),
                ('target_test_date_4', models.DateField(null=True)),
                ('core_prep_date', models.DateField(null=True)),
                ('total_days', models.IntegerField(default=0)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_availablity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_availability',
            },
        ),
        migrations.CreateModel(
            name='FeedbackQuestionRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('rating', models.IntegerField()),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_ratings', to='db.feedback')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.feedbackquestions')),
            ],
            options={
                'db_table': 'feedback_question_ratings',
            },
        ),
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('type', models.CharField(max_length=50)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='db.appointments')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'attendee',
            },
        ),
        migrations.CreateModel(
            name='AppointmentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('is_student_joined', models.BooleanField(default=False)),
                ('is_tutor_joined', models.BooleanField(default=False)),
                ('reason', models.CharField(choices=[('TUTOR_NOT_JOINED', 'Tutor_not_joined'), ('STUDENT_NOT_JOINED', 'Student_not_joined'), ('CANCEL', 'Cancel'), ('RESCHEDULE', 'Reshedule')], max_length=100)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_reports', to='db.appointments')),
            ],
            options={
                'db_table': 'appointment_reports',
            },
        ),
        migrations.CreateModel(
            name='AppointmentMolecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('is_completed', models.BooleanField(default=False)),
                ('appointment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='db.appointments')),
                ('molecule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='molecule', to='db.molecule')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
