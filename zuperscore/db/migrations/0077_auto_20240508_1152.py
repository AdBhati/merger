# Generated by Django 3.2.20 on 2024-05-08 06:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('db', '0076_question_calculator'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('marks', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('HOME', 'HOME'), ('CLASS', 'CLASS'), ('PRACTICE_SHEET', 'PRACTICE_SHEET'), ('CPEA_R1', 'CPEA_R1'), ('CPEA_R2', 'CPEA_R2'), ('CPEA_R3', 'CPEA_R3'), ('CPEA_W1', 'CPEA_W1'), ('CPEA_W2', 'CPEA_W2'), ('CPEA_W3', 'CPEA_W3'), ('CPEA_M1', 'CPEA_M1'), ('CPEA_M2', 'CPEA_M2'), ('CPEA_M3', 'CPEA_M3')], default='PRACTICE_SHEET', max_length=255)),
                ('category', models.CharField(choices=[('r', 'R'), ('s', 'S'), ('t', 'T')], default='r', max_length=20)),
                ('sequence', models.IntegerField(default=0)),
                ('pdf_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'db_table': 'assignment',
            },
        ),
        migrations.CreateModel(
            name='AssignmentQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.TextField(blank=True)),
                ('passage', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
                ('explanation', models.TextField(blank=True)),
                ('remarks', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('MCQ', 'MCQ'), ('FIB', 'FIB'), ('TF', 'TF'), ('SPR', 'SPR')], default='MCQ', max_length=255)),
                ('enter_your_answer', models.TextField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_questions', to='db.assignment')),
            ],
            options={
                'verbose_name': 'AssignmentQuestion',
                'verbose_name_plural': 'AssignmentQuestions',
                'db_table': 'assignment_question',
            },
        ),
        migrations.CreateModel(
            name='EnglishCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('baseline_score', models.CharField(default='<550', max_length=20)),
                ('ca', models.CharField(choices=[('2ca', '2 CA'), ('3ca', '3 CA'), ('4ca', '4 CA')], default='2ca', max_length=20)),
                ('ha', models.CharField(choices=[('5ha', '5 HA'), ('6ha', '6 HA'), ('7ha', '7 HA')], default='5ha', max_length=20)),
                ('name', models.CharField(choices=[('r', 'R'), ('s', 'S'), ('t', 'T')], default='r', max_length=20)),
                ('difficulty', models.CharField(default='5', max_length=20)),
                ('short_desc', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'english_category',
            },
        ),
        migrations.CreateModel(
            name='MathCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('baseline_score', models.CharField(default='<550', max_length=20)),
                ('ca', models.CharField(choices=[('2ca', '2 CA'), ('3ca', '3 CA'), ('4ca', '4 CA')], default='2ca', max_length=20)),
                ('ha', models.CharField(choices=[('5ha', '5 HA'), ('6ha', '6 HA'), ('7ha', '7 HA')], default='5ha', max_length=20)),
                ('name', models.CharField(choices=[('r', 'R'), ('s', 'S'), ('t', 'T')], default='r', max_length=20)),
                ('difficulty', models.CharField(default='5', max_length=20)),
                ('short_desc', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'math_category',
            },
        ),
        migrations.CreateModel(
            name='Molecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('title', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('baseline_score', models.CharField(default='<550', max_length=20)),
                ('ca', models.CharField(choices=[('2ca', '2 CA'), ('3ca', '3 CA'), ('4ca', '4 CA')], default='2ca', max_length=20)),
                ('ha', models.CharField(choices=[('5ha', '5 HA'), ('6ha', '6 HA'), ('7ha', '7 HA')], default='5ha', max_length=20)),
                ('name', models.CharField(choices=[('r', 'R'), ('s', 'S'), ('t', 'T')], default='r', max_length=20)),
                ('difficulty', models.CharField(default='5', max_length=20)),
                ('short_desc', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'student_category',
            },
        ),
        migrations.CreateModel(
            name='Target_Test_Date',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'target_test_dates',
            },
        ),
        migrations.RenameField(
            model_name='user',
            old_name='last_ptm_date',
            new_name='class_start_date',
        ),
        migrations.RemoveField(
            model_name='user',
            name='pending_classes',
        ),
        migrations.AddField(
            model_name='domain',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='domain',
            name='sequence',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='domain',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='db.subject'),
        ),
        migrations.AddField(
            model_name='megadomain',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='megadomain',
            name='sequence',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='subject',
            name='mega_domain',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='subtopic',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='subtopic',
            name='practice_sheet',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subtopic',
            name='sequence',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='topic',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='topic',
            name='sequence',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='day_schedule_user_id',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='user',
            name='english_reading_tutors',
            field=models.ManyToManyField(blank=True, related_name='_db_user_english_reading_tutors_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='english_writing_tutors',
            field=models.ManyToManyField(blank=True, related_name='_db_user_english_writing_tutors_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='isRepeater',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='is_cpea_eligible',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='is_english_reading_assigned',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='is_english_writing_assigned',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='is_math_assigned',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='is_onboarded',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='total_class_per_day',
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name='user',
            name='total_mega_domain_class_per_day',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='user',
            name='tutor_slot',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='tutor_type',
            field=models.CharField(choices=[('english', 'English'), ('math', 'Math'), ('english_reading', 'English_Reading'), ('english_writing', 'English_Writing')], default='english', max_length=64),
        ),
        migrations.AlterField(
            model_name='megadomain',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mega_domains', to='db.subject'),
        ),
        migrations.AlterField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='db.topic'),
        ),
        migrations.AlterField(
            model_name='topic',
            name='domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='db.domain'),
        ),
        migrations.CreateModel(
            name='TutorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('slot', models.IntegerField(default=0)),
                ('total_week_supply', models.IntegerField(default=0)),
                ('total_weekly_load', models.IntegerField(default=0)),
                ('remaining_weekly_supply', models.IntegerField(default=0)),
                ('total_monthly_load', models.IntegerField(default=0)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutor_availability', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tutor_availablity',
            },
        ),
        migrations.CreateModel(
            name='SessionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
                ('mega_domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_plan', to='db.megadomain')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_plan', to='db.subject')),
            ],
            options={
                'verbose_name': 'SessionPlan',
                'verbose_name_plural': 'SessionPlans',
                'db_table': 'session_plan',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('sequence', models.IntegerField(default=0)),
                ('questions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_options', to='db.assignmentquestion')),
            ],
            options={
                'verbose_name': 'QuestionOption',
                'verbose_name_plural': 'QuestionOptions',
                'db_table': 'question_option',
            },
        ),
        migrations.CreateModel(
            name='MotherSessionMolecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(default='Session Plan', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('molecule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mother_session_molecule_id', to='db.molecule')),
                ('session_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mother_session_molecule_id', to='db.sessionplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MoleculeTopicSubtopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('molecule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moleculetopicsubtopic_id', to='db.molecule')),
                ('subtopic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moleculetopicsubtopic_id', to='db.subtopic')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moleculetopicsubtopic_id', to='db.topic')),
            ],
            options={
                'verbose_name': 'MoleculeTopicSubtopic',
                'verbose_name_plural': 'MoleculeTopicSubtopics',
                'db_table': 'molecule_topic_subtopic',
            },
        ),
        migrations.AddField(
            model_name='molecule',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_id', to='db.domain'),
        ),
        migrations.AddField(
            model_name='molecule',
            name='mega_domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mega_domain_id', to='db.megadomain'),
        ),
        migrations.AddField(
            model_name='molecule',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_id', to='db.subject'),
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sequence', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('mega_domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='db.megadomain')),
                ('session_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='db.sessionplan')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'db_table': 'modules',
            },
        ),
        migrations.CreateModel(
            name='CpeaReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('cpea_question', models.CharField(max_length=150)),
                ('remedial_action', models.CharField(blank=True, max_length=150, null=True)),
                ('mega_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpea_report_mega_domian', to='db.megadomain')),
            ],
            options={
                'verbose_name': 'CPEA Report',
                'verbose_name_plural': 'CPEA Reports',
                'db_table': 'cpea_reports',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('comment', models.CharField(blank=True, max_length=500)),
                ('type', models.CharField(choices=[('student', 'Student'), ('parent', 'Parent')], default='parent', max_length=255)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.AddField(
            model_name='assignment',
            name='subTopic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='db.subtopic'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='db.subject'),
        ),
        migrations.AddField(
            model_name='domain',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='db.module'),
        ),
        migrations.AddField(
            model_name='user',
            name='english_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='english_category', to='db.englishcategory'),
        ),
        migrations.AddField(
            model_name='user',
            name='math_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='math_category', to='db.mathcategory'),
        ),
    ]
